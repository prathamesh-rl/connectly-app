name: Build compact DuckDB via Python

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install DuckDB
        run: |
          python -m pip install duckdb

      - name: Build DuckDB from parquet
        run: |
          python - <<'PY'
          import duckdb, glob, pathlib
          print("â–¶ Building compact DuckDB")

          con = duckdb.connect("connectly.duckdb")

          # Campaign files (minimal columns only)
          con.execute("""
          CREATE OR REPLACE TABLE camp AS
          SELECT 
            customer_external_id,
            dispatched_at,
            delivered,
            button_responses,
            link_clicks,
            business_id,
            sendout_name
          FROM read_parquet(
            ['parquet_trim/dispatch_date=*/data_0.parquet',
             'parquet_trim/msg_*.parquet',
             'parquet_output/dispatch_date=*/data_0*.parquet'],
            union_by_name = true
          )
          """)

          # Activity files with user_phone logic
          act_files = glob.glob("activity_chunks/activity_data_*.parquet")
          con.execute(f"""
          CREATE OR REPLACE TABLE act AS
          SELECT 
            CASE
              WHEN product = 'PP' THEN CAST(guardian_phone AS VARCHAR)
              WHEN product = 'TP' THEN CAST(moderator_phone AS VARCHAR)
              ELSE NULL
            END AS user_phone,
            activity_date
          FROM read_parquet(
            [{','.join(repr(str(pathlib.Path(p))) for p in act_files)}],
            union_by_name = true
          )
          """)
          PY

      - name: Commit DB file
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git add connectly.duckdb
          git commit -m "CI: refresh compact DB" || echo "No changes to commit"
          git push
